package lsb;

import java.awt.EventQueue;
import java.awt.Image;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

import java.awt.BorderLayout;
import java.awt.Color;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;

import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.JTextField;
import java.awt.Font;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.SwingConstants;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.border.LineBorder;

public class lsb {

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	private BufferedImage img;
	private BufferedImage img1;
	FileFilter filter = new FileNameExtensionFilter("Image files", "gif", "png", "jpg");
	private JTextField txtInfo;
	private JTextField txtPass;
	private JTextField txtpassextract;
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					lsb window = new lsb();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public lsb() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 580, 382);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JPanel panelhide = new JPanel();
		panelhide.setVisible(false);
		panelhide.setBounds(0, 22, 554, 310);
		frame.getContentPane().add(panelhide);
		panelhide.setLayout(null);
		JPanel panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		panel.setBounds(32, 11, 186, 162);
		panelhide.add(panel);
		panel.setLayout(null);
		JLabel lbImage = new JLabel("");
		lbImage.setBounds(0, 0, 186, 162);
		panel.add(lbImage);
		JButton btnOpenFile = new JButton("open file");
		btnOpenFile.setBounds(80, 184, 89, 23);
		panelhide.add(btnOpenFile);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBorder(new LineBorder(new Color(0, 0, 0)));
		panel_1.setBounds(342, 11, 186, 162);
		panelhide.add(panel_1);
		panel_1.setLayout(null);
		
		JLabel lbImageHide = new JLabel("");
		lbImageHide.setBounds(0, 0, 186, 162);
		panel_1.add(lbImageHide);
		
		JButton btnProcess = new JButton("process");
		btnProcess.setBounds(233, 81, 89, 23);
		panelhide.add(btnProcess);
		
		txtInfo = new JTextField();
		txtInfo.setBounds(133, 218, 297, 31);
		panelhide.add(txtInfo);
		txtInfo.setColumns(10);
		
		txtPass = new JTextField();
		txtPass.setBounds(134, 255, 297, 31);
		panelhide.add(txtPass);
		txtPass.setColumns(10);
		
		JLabel lblNewLabel = new JLabel("Pass");
		lblNewLabel.setBounds(51, 260, 72, 23);
		panelhide.add(lblNewLabel);
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 16));
		
		JLabel lblInfo = new JLabel("Info");
		lblInfo.setBounds(49, 226, 72, 23);
		panelhide.add(lblInfo);
		lblInfo.setFont(new Font("Tahoma", Font.PLAIN, 16));
		
		JButton btnSave = new JButton("Save");
		btnSave.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
		        int choose = -1;
		        choose = fc.showSaveDialog(null);
		        if (choose==JFileChooser.APPROVE_OPTION) {
		        	//String name=fc.getSelectedFile().getName()+".png";
		            //File file=new File(fc.getSelectedFile().getName()+".png");
		        	File file = fc.getSelectedFile();
		           
		            try {
		                ImageIO.write(img1, "png", file);
		            } catch (IOException ex) {
		                //Logger.getLogger(Thuchanh.class.getName()).log(Level.SEVERE, null, ex);
		            }
		        }
			}
		});
		btnSave.setBounds(401, 184, 89, 23);
		panelhide.add(btnSave);
		
		JPanel panelextract = new JPanel();
		panelextract.setVisible(false);
		panelextract.setBounds(0, 22, 554, 310);
		frame.getContentPane().add(panelextract);
		panelextract.setLayout(null);
		
		JPanel panel_2 = new JPanel();
		panel_2.setBorder(new LineBorder(new Color(0, 0, 0)));
		panel_2.setBounds(146, 11, 223, 180);
		panelextract.add(panel_2);
		panel_2.setLayout(null);
		
		JLabel lbimgextract = new JLabel("");
		lbimgextract.setBounds(0, 0, 223, 180);
		panel_2.add(lbimgextract);
		
		JButton btnOpenimageExtract = new JButton("Open image");
		btnOpenimageExtract.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
				fc.setFileFilter(filter);
				int f=fc.showOpenDialog(null);
				if(f==JFileChooser.APPROVE_OPTION){
			        File file = fc.getSelectedFile();
			        try {
			            img = ImageIO.read(new File(file.getPath()));
			            ImageIcon icon = new ImageIcon(img.getScaledInstance(lbimgextract.getWidth(), lbimgextract.getHeight(), Image.SCALE_SMOOTH));
			            lbimgextract.setIcon(icon);
			       
			        } catch (IOException ex) {
			            
			        }
				}
			}
		});
		btnOpenimageExtract.setBounds(34, 35, 89, 23);
		panelextract.add(btnOpenimageExtract);
		
		JButton btnProcessextract = new JButton("Proccess");
		btnProcessextract.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				extractInfo(img, txtpassextract.getText());
			}
		});
		btnProcessextract.setBounds(34, 92, 89, 23);
		panelextract.add(btnProcessextract);
		
		JLabel lbinfo = new JLabel("");
		lbinfo.setBounds(112, 202, 342, 31);
		panelextract.add(lbinfo);
		
		JLabel lblInfo_1 = new JLabel("info");
		lblInfo_1.setFont(new Font("Tahoma", Font.PLAIN, 13));
		lblInfo_1.setBounds(34, 210, 68, 23);
		panelextract.add(lblInfo_1);
		
		JLabel lblPassword = new JLabel("password");
		lblPassword.setFont(new Font("Tahoma", Font.PLAIN, 13));
		lblPassword.setBounds(34, 242, 68, 23);
		panelextract.add(lblPassword);
		
		txtpassextract = new JTextField();
		txtpassextract.setBounds(112, 242, 319, 22);
		panelextract.add(txtpassextract);
		txtpassextract.setColumns(10);
		JMenuBar menuBar = new JMenuBar();
		menuBar.setBounds(0, 2, 554, 20);
		frame.getContentPane().add(menuBar);
		JMenu mnNewMenu = new JMenu("Hide Info");
		mnNewMenu.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				panelhide.setVisible(true);
				panelextract.setVisible(false);
			}
		});
		mnNewMenu.setHorizontalAlignment(SwingConstants.CENTER);
		menuBar.add(mnNewMenu);
		
		JMenu mnNewMenu_1 = new JMenu("Extract Info");
		mnNewMenu_1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				panelextract.setVisible(true);
				panelhide.setVisible(false);
			}
		});
		menuBar.add(mnNewMenu_1);
		
		
		
		
		
		btnProcess.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				img1=hideInfo(img, txtInfo.getText(), txtPass.getText());
				ImageIcon icon = new ImageIcon(img1.getScaledInstance(lbImageHide.getWidth(), lbImageHide.getHeight(), Image.SCALE_SMOOTH));
				lbImageHide.setIcon(icon);
			}
		});
		btnOpenFile.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				JFileChooser fc = new JFileChooser();
				fc.setFileFilter(filter);
				int f=fc.showOpenDialog(null);
				if(f==JFileChooser.APPROVE_OPTION){
			        File file = fc.getSelectedFile();
			        try {
			            img = ImageIO.read(new File(file.getPath()));
			            ImageIcon icon = new ImageIcon(img.getScaledInstance(lbImage.getWidth(), lbImage.getHeight(), Image.SCALE_SMOOTH));
			            lbImage.setIcon(icon);
			       
			        } catch (IOException ex) {
			            
			        }
				}
			}
		});
		
		
		
		
	}
	public BufferedImage hideInfo(BufferedImage img, String info, String pass){
		int width = img.getWidth();
		int height = img.getHeight();
		BufferedImage hideImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
		hideImage=img;
		int[] arrbninfo= chuyenchuoivenhiphan(info);
		int[] arrbnpass= chuyenchuoivenhiphan(pass);
		int lengthinfo=arrbninfo.length;
		int[] length=chuyensovenhiphan(arrbninfo.length);
		int x=0;
		int y=0;
		for(int i=0;i<arrbninfo.length;i++){
			System.out.print(arrbninfo[i]);
		}
		System.out.println("\n");
		for(int i=0;i<arrbnpass.length;i++){
			System.out.print(arrbnpass[i]);
		}
		//giau pass
		for(int i=0;i<arrbnpass.length;i++){
			int rgb = img.getRGB(y, x);
			if(arrbnpass[i] == 0){
				rgb = rgb & 0xFFFEFFFF;
			}
			else {
				rgb = (rgb | 0x00010000);
			}
			hideImage.setRGB(y, x, rgb);
			System.out.print(img.getRGB(y, x));
			x=(x+1)%width;
			y=y+(x/width);
		}
//		//giau chieu dai thong tin
		for(int i=0;i<length.length;i++){
			int rgb = img.getRGB(y, x);
			if(length[i] == 0){
				rgb = rgb & 0xFFFEFFFF;
			}
			else {
				rgb = (rgb | 0x00010000);
			}
			hideImage.setRGB(y, x, rgb);
			x=(x+1)%width;
			y=y+(x/width);
		}
//		//giau thong tin
		for(int i=0;i<arrbninfo.length;i++){
			int rgb = img.getRGB(y, x);
			if(arrbninfo[i] == 0){
				rgb = rgb & 0xFFFEFFFF;
			}
			else {
				rgb = (rgb | 0x00010000);
			}
			hideImage.setRGB(y, x,rgb);
			x=(x+1)%width;
			y=y+(x/width);
		}
		return hideImage;
	}
	
	public void extractInfo(BufferedImage img, String pass){
		int width = img.getWidth();
		int height = img.getHeight();
		int x=0;
		int y=0;
		int[] arrbnpass= chuyenchuoivenhiphan(pass);
		//so sanh mat khau
		for(int i=0;i<arrbnpass.length;i++){
			Color c = new Color(img.getRGB(y, x));
			if(c.getRed()%2!=arrbnpass[i]){
				JOptionPane.showMessageDialog(null, "password wrong", "Error", JOptionPane.ERROR_MESSAGE);
				return;
			}
			x=(x+1)%width;
			y=y+(x/width);
		}
		int[] arrlength= new int[24];
		
		for(int i=0;i<24;i++){
			Color c = new Color(img.getRGB(y, x));
			arrlength[i]=c.getRed()%2;
			x=(x+1)%width;
			y=y+(x/width);
		}
		
		int length=chuyennhiphanvethapphan(arrlength);
		System.out.print(length);
		int[] arrinfo=new int[length];
		for(int i=0;i<length;i++){
			Color c = new Color(img.getRGB(y, x));
			arrinfo[i]=c.getRed()%2;
			x=(x+1)%width;
			y=y+(x/width);
		}
		for(int i=0;i<arrlength.length;i++){
			System.out.print(arrlength[i]);
		}
		
	}
	
	public int[] chuyenchuoivenhiphan(String txt){
		int length=txt.length()*8;
		int[] bntxt= new int[length];
		char[] arrtxt = txt.toCharArray();
		int index=0;
        for(int i:arrtxt) {
            int decimal= (int)i;
            System.out.print(decimal);
            for(int j=0;j<8;j++){
            	bntxt[index*8+j]=decimal%2;
            	decimal=decimal/2;
            }
            index++;
        }
		return bntxt;
	}
	
	public int[] chuyensovenhiphan(int number){
		int[] bnint= new int[24];
		for(int i=0;i<24;i++){
			bnint[i]=number%2;
			number=number/2;			
		}
		return bnint;
	}
	
	public int chuyennhiphanvethapphan(int[] arrnumber){
		int length=0;
		for(int i=0;i<24;i++){
			length+=Math.pow(arrnumber[i]*2,i);	
		}
		return length;
	}
}
